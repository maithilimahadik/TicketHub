Last login: Fri May 30 19:43:53 on ttys000
/dev/fd/12:18: command not found: compdef
(base) maithilimahadik@Maithilis-MacBook ~ % mysql -u root -p
Enter password: 
Welcome to the MySQL monitor.  Commands end with ; or \g.
Your MySQL connection id is 13
Server version: 9.3.0 Homebrew

Copyright (c) 2000, 2018, Oracle and/or its affiliates. All rights reserved.

Oracle is a registered trademark of Oracle Corporation and/or its
affiliates. Other names may be trademarks of their respective
owners.

Type 'help;' or '\h' for help. Type '\c' to clear the current input statement.

mysql> USE ticket_booking_system;
Database changed
mysql> CREATE TABLE users (
    ->     id INT PRIMARY KEY AUTO_INCREMENT,
    ->     username VARCHAR(50) UNIQUE NOT NULL,
    ->     email VARCHAR(100) UNIQUE NOT NULL,
    ->     password VARCHAR(255) NOT NULL,
    ->     full_name VARCHAR(100) NOT NULL,
    ->     phone VARCHAR(20),
    ->     created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
    -> );
Query OK, 0 rows affected (0.04 sec)

mysql> CREATE TABLE events (
    ->     id INT PRIMARY KEY AUTO_INCREMENT,
    ->     title VARCHAR(200) NOT NULL,
    ->     description TEXT,
    ->     venue VARCHAR(200) NOT NULL,
    ->     event_date DATETIME NOT NULL,
    ->     total_seats INT NOT NULL,
    ->     available_seats INT NOT NULL,
    ->     price DECIMAL(10, 2) NOT NULL,
    ->     image_url VARCHAR(500),
    ->     category VARCHAR(50),
    ->     created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
    -> );
Query OK, 0 rows affected (0.01 sec)

mysql> CREATE TABLE bookings (
    ->     id INT PRIMARY KEY AUTO_INCREMENT,
    ->     user_id INT NOT NULL,
    ->     event_id INT NOT NULL,
    ->     seats_booked INT NOT NULL,
    ->     total_amount DECIMAL(10, 2) NOT NULL,
    ->     booking_status ENUM('pending', 'confirmed', 'cancelled') DEFAULT 'pending',
    ->     booking_reference VARCHAR(20) UNIQUE NOT NULL,
    ->     created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    ->     FOREIGN KEY (user_id) REFERENCES users(id) ON DELETE CASCADE,
    ->     FOREIGN KEY (event_id) REFERENCES events(id) ON DELETE CASCADE
    -> );
Query OK, 0 rows affected (0.02 sec)

mysql> CREATE TABLE seats (
    ->     id INT PRIMARY KEY AUTO_INCREMENT,
    ->     event_id INT NOT NULL,
    ->     seat_number VARCHAR(10) NOT NULL,
    ->     row_name VARCHAR(5) NOT NULL,
    ->     section VARCHAR(20),
    ->     is_booked BOOLEAN DEFAULT FALSE,
    ->     booking_id INT NULL,
    ->     created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    ->     FOREIGN KEY (event_id) REFERENCES events(id) ON DELETE CASCADE,
    ->     FOREIGN KEY (booking_id) REFERENCES bookings(id) ON DELETE SET NULL,
    ->     UNIQUE KEY unique_seat_per_event (event_id, seat_number, row_name)
    -> );
Query OK, 0 rows affected (0.02 sec)

mysql> INSERT INTO events (title, description, venue, event_date, total_seats, available_seats, price, category) VALUES
    -> ('Rock Concert 2025', 'Amazing rock concert with top artists', 'Madison Square Garden', '2025-07-15 20:00:00', 1000, 950, 75.00, 'Music'),
    -> ('Comedy Night Special', 'Hilarious comedy show with renowned comedians', 'Comedy Club Downtown', '2025-06-20 19:30:00', 300, 280, 45.00, 'Comedy'),
    -> ('Tech Conference 2025', 'Latest trends in technology and innovation', 'Convention Center', '2025-08-10 09:00:00', 500, 450, 120.00, 'Technology'),
    -> ('Football Championship', 'Championship match between top teams', 'Sports Stadium', '2025-09-05 16:00:00', 50000, 48500, 85.00, 'Sports');
Query OK, 4 rows affected (0.01 sec)
Records: 4  Duplicates: 0  Warnings: 0

mysql> INSERT INTO seats (event_id, seat_number, row_name, section)
    -> SELECT 
    ->     e.id,
    ->     LPAD(ROW_NUMBER() OVER (PARTITION BY e.id ORDER BY e.id), 3, '0') as seat_number,
    ->     CHAR(65 + FLOOR((ROW_NUMBER() OVER (PARTITION BY e.id ORDER BY e.id) - 1) / 20)) as row_name,
    ->     CASE 
    ->         WHEN ROW_NUMBER() OVER (PARTITION BY e.id ORDER BY e.id) <= e.total_seats * 0.3 THEN 'VIP'
    ->         WHEN ROW_NUMBER() OVER (PARTITION BY e.id ORDER BY e.id) <= e.total_seats * 0.7 THEN 'Premium'
    ->         ELSE 'Standard'
    ->     END as section
    -> FROM events e
    -> CROSS JOIN (
    ->     SELECT a.N + b.N * 10 + c.N * 100 + d.N * 1000 + 1 as seat_num
    ->     FROM (SELECT 0 AS N UNION SELECT 1 UNION SELECT 2 UNION SELECT 3 UNION SELECT 4 UNION SELECT 5 UNION SELECT 6 UNION SELECT 7 UNION SELECT 8 UNION SELECT 9) a
    ->     CROSS JOIN (SELECT 0 AS N UNION SELECT 1 UNION SELECT 2 UNION SELECT 3 UNION SELECT 4 UNION SELECT 5 UNION SELECT 6 UNION SELECT 7 UNION SELECT 8 UNION SELECT 9) b
    ->     CROSS JOIN (SELECT 0 AS N UNION SELECT 1 UNION SELECT 2 UNION SELECT 3 UNION SELECT 4 UNION SELECT 5 UNION SELECT 6 UNION SELECT 7 UNION SELECT 8 UNION SELECT 9) c
    ->     CROSS JOIN (SELECT 0 AS N UNION SELECT 1 UNION SELECT 2 UNION SELECT 3 UNION SELECT 4 UNION SELECT 5 UNION SELECT 6 UNION SELECT 7 UNION SELECT 8 UNION SELECT 9) d
    -> ) numbers
    -> WHERE numbers.seat_num <= e.total_seats;
ERROR 1062 (23000): Duplicate entry '4-100-s' for key 'seats.unique_seat_per_event'
mysql> DELETE FROM seats;
Query OK, 0 rows affected (0.05 sec)

mysql> INSERT INTO seats (event_id, seat_number, row_name, section)
    -> SELECT 
    ->     e.id as event_id,
    ->     LPAD(((numbers.seat_num - 1) % 20) + 1, 3, '0') as seat_number,
    ->     CHAR(65 + FLOOR((numbers.seat_num - 1) / 20)) as row_name,
    ->     CASE 
    ->         WHEN numbers.seat_num <= e.total_seats * 0.3 THEN 'VIP'
    ->         WHEN numbers.seat_num <= e.total_seats * 0.7 THEN 'Premium'
    ->         ELSE 'Standard'
    ->     END as section
    -> FROM events e
    -> CROSS JOIN (
    ->     SELECT a.N + b.N * 10 + c.N * 100 + d.N * 1000 + 1 as seat_num
    ->     FROM (SELECT 0 AS N UNION SELECT 1 UNION SELECT 2 UNION SELECT 3 UNION SELECT 4 UNION SELECT 5 UNION SELECT 6 UNION SELECT 7 UNION SELECT 8 UNION SELECT 9) a
    ->     CROSS JOIN (SELECT 0 AS N UNION SELECT 1 UNION SELECT 2 UNION SELECT 3 UNION SELECT 4 UNION SELECT 5 UNION SELECT 6 UNION SELECT 7 UNION SELECT 8 UNION SELECT 9) b
    ->     CROSS JOIN (SELECT 0 AS N UNION SELECT 1 UNION SELECT 2 UNION SELECT 3 UNION SELECT 4 UNION SELECT 5 UNION SELECT 6 UNION SELECT 7 UNION SELECT 8 UNION SELECT 9) c
    ->     CROSS JOIN (SELECT 0 AS N UNION SELECT 1 UNION SELECT 2 UNION SELECT 3 UNION SELECT 4 UNION SELECT 5 UNION SELECT 6 UNION SELECT 7 UNION SELECT 8 UNION SELECT 9) d
    -> ) numbers
    -> WHERE numbers.seat_num <= e.total_seats;
ERROR 1062 (23000): Duplicate entry '1-010-P' for key 'seats.unique_seat_per_event'
mysql> INSERT INTO seats (event_id, seat_number, row_name, section)
    -> SELECT 
    ->     e.id as event_id,
    ->     LPAD(((numbers.seat_num - 1) % 20) + 1, 3, '0') as seat_number,
    ->     CHAR(65 + FLOOR((numbers.seat_num - 1) / 20)) as row_name,
    ->     CASE 
    ->         WHEN numbers.seat_num <= e.total_seats * 0.3 THEN 'VIP'
    ->         WHEN numbers.seat_num <= e.total_seats * 0.7 THEN 'Premium'
    ->         ELSE 'Standard'
    ->     END as section
    -> FROM events e
    -> CROSS JOIN (
    ->     SELECT a.N + b.N * 10 + c.N * 100 + d.N * 1000 + 1 as seat_num
    ->     FROM (SELECT 0 AS N UNION SELECT 1 UNION SELECT 2 UNION SELECT 3 UNION SELECT 4 UNION SELECT 5 UNION SELECT 6 UNION SELECT 7 UNION SELECT 8 UNION SELECT 9) a
    ->     CROSS JOIN (SELECT 0 AS N UNION SELECT 1 UNION SELECT 2 UNION SELECT 3 UNION SELECT 4 UNION SELECT 5 UNION SELECT 6 UNION SELECT 7 UNION SELECT 8 UNION SELECT 9) b
    ->     CROSS JOIN (SELECT 0 AS N UNION SELECT 1 UNION SELECT 2 UNION SELECT 3 UNION SELECT 4 UNION SELECT 5 UNION SELECT 6 UNION SELECT 7 UNION SELECT 8 UNION SELECT 9) c
    ->     CROSS JOIN (SELECT 0 AS N UNION SELECT 1 UNION SELECT 2 UNION SELECT 3 UNION SELECT 4 UNION SELECT 5 UNION SELECT 6 UNION SELECT 7 UNION SELECT 8 UNION SELECT 9) d
    -> ) numbers
    -> WHERE numbers.seat_num <= e.total_seats;
ERROR 1062 (23000): Duplicate entry '1-010-P' for key 'seats.unique_seat_per_event'
mysql> INSERT INTO seats (event_id, seat_number, row_name, section)
    -> SELECT 
    ->     1 as event_id,
    ->     LPAD(((n.num - 1) % 20) + 1, 3, '0') as seat_number,
    ->     CHAR(65 + FLOOR((n.num - 1) / 20)) as row_name,
    ->     CASE 
    ->         WHEN n.num <= 300 THEN 'VIP'
    ->         WHEN n.num <= 700 THEN 'Premium'
    ->         ELSE 'Standard'
    ->     END as section
    -> FROM (
    ->     SELECT @row := @row + 1 as num
    ->     FROM (SELECT 0 UNION SELECT 1 UNION SELECT 2 UNION SELECT 3 UNION SELECT 4 UNION SELECT 5 UNION SELECT 6 UNION SELECT 7 UNION SELECT 8 UNION SELECT 9) t1,
    ->          (SELECT 0 UNION SELECT 1 UNION SELECT 2 UNION SELECT 3 UNION SELECT 4 UNION SELECT 5 UNION SELECT 6 UNION SELECT 7 UNION SELECT 8 UNION SELECT 9) t2,
    ->          (SELECT 0 UNION SELECT 1 UNION SELECT 2 UNION SELECT 3 UNION SELECT 4 UNION SELECT 5 UNION SELECT 6 UNION SELECT 7 UNION SELECT 8 UNION SELECT 9) t3,
    ->          (SELECT 0 UNION SELECT 1 UNION SELECT 2 UNION SELECT 3 UNION SELECT 4 UNION SELECT 5 UNION SELECT 6 UNION SELECT 7 UNION SELECT 8 UNION SELECT 9) t4,
    ->          (SELECT @row := 0) r
    ->     LIMIT 1000
    -> ) n;
ERROR 1062 (23000): Duplicate entry '1-001-a' for key 'seats.unique_seat_per_event'
mysql> 
